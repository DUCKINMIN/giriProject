<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sist.board.dao.board-mapper">
	<!-- 리스트 -->
	<select id="boardList" resultType="BoardVO" parameterType="java.util.Map">
		SELECT b_no, b_subject, m_nick, b_regdate, b_grade, b_hit, num
		FROM (SELECT b_no, b_subject, m_nick,b_regdate, b_grade, b_hit, rownum as num 
		FROM (SELECT b.b_no, b.b_subject, m.m_nick, b.b_regdate, b.b_grade, b.b_hit
		FROM board b, member m WHERE b_grade=#{grade} AND b.m_email=m.m_email ORDER BY b.b_no DESC)) 
		WHERE num BETWEEN #{start} AND #{end}
	</select>
	
	<!-- grade별 게시물 총 갯수 -->
	<select id="boardListCount" resultType="int" parameterType="int">
		SELECT COUNT(*)
		FROM (SELECT * FROM board)
		WHERE b_grade=#{grade}
	</select>
	<!-- 총페이지 구하기-->
	<select id="boardTotalPage" resultType="int" parameterType="int">
		SELECT CEIL(COUNT(*)/10) FROM board WHERE b_grade=#{grade}
	</select>
	
	<!-- 상세보기 -->
	<select id="boardContentData" resultType="BoardVO" parameterType="int">
		SELECT b_no, m.m_nick, m.m_email, m.m_profile, b_subject, b_regdate, b_grade, b_hit, b_content, b_img_cnt
		FROM board b, member m
		WHERE b_no=#{b_no} AND b.m_email=m.m_email
	</select>
	<!-- 조회수 증가 -->
	<update id="boardHitIncrement" parameterType="java.util.Map">
		UPDATE board SET
		b_hit = b_hit + 1
		WHERE b_no = #{b_no} AND b_grade=#{grade}
	</update>
	
	
	<!-- 게시글 작성 -->
	<!-- 게시물 총 갯수 /파일저장시에 필요 -->
	<select id="boardInsertCount" resultType="int">
		SELECT NVL(MAX(b_no)+1,1) as b_no FROM board
	</select>
	<!-- 게시물 추가 -->
	<insert id="boardInsertData" parameterType="BoardVO">
		<selectKey keyProperty="b_no" resultType="int" order="BEFORE">
			SELECT NVL(MAX(b_no)+1,1) as b_no FROM board
		</selectKey>
		INSERT INTO board VALUES(
			#{b_no}, #{b_subject}, #{m_email}, SYSDATE, #{b_content}, #{b_grade}, 0 , #{b_img_cnt}
		)
	</insert>

	<!-- 게시물 삭제 -->
	<delete id="boardDeleteData" parameterType="int">
		DELETE FROM board
		WHERE b_no = #{b_no}
	</delete>
	
	<!-- 게시물 수정 -->
	<update id="boardUpdateData" parameterType="BoardVO">
		UPDATE SET
		b_subject=#{b_subject}, b_content=#{b_content}, #{b_img_cnt}
		WHERE b_no = #{b_no}
	</update>
	<!-- 이미지 cnt -->
	<select id="boardImgCnt" parameterType="int" resultType="int">
		SELECT b_img_cnt FROM board
		WHERE b_no=#{b_no}
	</select>
	
	<!-- 검색 -->
	<select id="boardSubjectSearch" resultType="BoardVO" parameterType="java.util.Map">
		SELECT b_no, b_subject, m_nick, b_regdate, b_grade, b_hit, num
		FROM (SELECT b_no, b_subject, m_nick,b_regdate, b_grade, b_hit, rownum as num 
		FROM (SELECT b.b_no, b.b_subject, m.m_nick, b.b_regdate, b.b_grade, b.b_hit
		FROM board b, member m WHERE b_grade=#{grade} AND b.m_email=m.m_email 
		AND b_subject LIKE '%'||#{strSearch}||'%' ORDER BY b.b_no DESC)) 
		WHERE num BETWEEN #{start} AND #{end}
	</select>
	<!-- 검색 총페이지 -->
	<select id="searchSubjectPage" resultType="int" parameterType="java.util.Map">
		SELECT CEIL(COUNT(*)/10) FROM board WHERE b_grade=#{grade} AND b_subject LIKE '%'||#{strSearch}||'%'
	</select>
	
	<select id="boardNickSearch" resultType="BoardVO" parameterType="java.util.Map">
		SELECT b_no, b_subject, m_nick, b_regdate, b_grade, b_hit, num
		FROM (SELECT b_no, b_subject, m_nick,b_regdate, b_grade, b_hit, rownum as num 
		FROM (SELECT b.b_no, b.b_subject, m.m_nick, b.b_regdate, b.b_grade, b.b_hit
		FROM board b, member m WHERE b_grade=#{grade} AND b.m_email=m.m_email 
		AND m_nick=#{strSearch} ORDER BY b.b_no DESC)) 
		WHERE num BETWEEN #{start} AND #{end}
	</select>
	<select id="searchNickPage" resultType="int" parameterType="java.util.Map">
		SELECT CEIL(COUNT(*)/10) FROM board b, member m  WHERE b_grade=#{grade} AND m_nick=#{strSearch}
	</select>
	
	<!-- 댓글 -->
	<!-- 댓글 목록 출력 -->
	<!-- BC_NO                                     NOT NULL NUMBER
 M_EMAIL                                            VARCHAR2(40)
 BC_REGDATE                                         DATE
 BC_CONTENT                                NOT NULL CLOB
 B_NO                                               NUMBER
 BC_GROUP_ID                                        NUMBER
 BC_GROUP_STEP                                      NUMBER
 BC_GROUP_TAB                                       NUMBER
 BC_ROOT                                            NUMBER
 DEPTH -->
 	<resultMap type="BoardCommentVO" id="bcVO">
		<result property="b_no" column="b_no"/>
		<result property="bc_no" column="bc_no"/>
		<result property="m_email" column="m_email"/>
		<result property="bc_content" column="bc_content"/>
		<result property="dbday" column="dbday"/>
		<result property="bc_group_tab" column="bc_group_tab"/>
		<result property="num" column="num"/>
		<association property="mvo" javaType="com.sist.member.dao.MemberVo">
			<result property="m_nick" column="m_nick"/>
			<result property="m_profile" column="m_profile"/>
		</association>
	</resultMap>
	<select id="commentListData" resultMap="bcVO" parameterType="java.util.Map">
		SELECT b_no, bc_no, m_email, m_nick,m_profile, bc_content, TO_CHAR(bc_regdate,'YYYY-MM-DD HH24:MI:SS') as dbday, bc_group_tab, num
		FROM (SELECT b_no, bc_no, m_email, m_nick,m_profile, bc_content, bc_regdate, bc_group_tab , rownum as num
		FROM (SELECT bc.b_no, bc.bc_no, bc.m_email, m.m_nick,m.m_profile, bc.bc_content, bc.bc_regdate, bc.bc_group_tab
		FROM board_comment bc, member m WHERE bc.b_no=#{b_no} AND bc.m_email = m.m_email
		ORDER BY bc_group_id DESC, bc_group_step ASC))
		WHERE num BETWEEN #{start} AND #{end}
	</select>
	<!-- 댓글 총페이지 구하기-->
	<select id="commentTotalPage" resultType="int" parameterType="int">
		SELECT CEIL(COUNT(*)/10) FROM board_comment WHERE b_no=#{b_no}
	</select>
	<!-- 댓글 추가 -->
	<insert id="commentNewInsert" parameterType="BoardCommentVO">
		<selectKey keyProperty="bc_no" resultType="int" order="BEFORE">
			SELECT NVL(MAX(bc_no)+1,1) as bc_no FROM board_comment
		</selectKey>
		INSERT INTO board_comment(bc_no, b_no, m_email, bc_content, bc_group_id) VALUES(
			#{bc_no}, #{b_no}, #{m_email}, #{bc_content}, (SELECT NVL(MAX(bc_group_id)+1,1) FROM board_comment)
		)
	</insert>
	<!-- 댓글 수정 -->
	<update id="commentUpdate" parameterType="BoardCommentVO">
		UPDATE board_comment SET
		bc_content = #{bc_content}
		WHERE bc_no=#{bc_no}
	</update>
	<!-- 댓글 삭제 -->
	<!-- 댓글 삭제 -->
	<select id="commentDeleteData" resultType="BoardCommentVO" parameterType="int">
		SELECT depth, bc_root FROM board_comment
		WHERE bc_no=#{bc_no}
	</select>
	<!-- depth!=0 => 관리자가 삭제한 게시물 -->
	<update id="commentContentUpdate" parameterType="int">
		UPDATE board_comment SET
		bc_content = '삭제한 댓글입니다'
		WHERE bc_no=#{bc_no}
	</update>
	<!-- depth==0 => 삭제 -->
	<delete id="commentDelete" parameterType="int">
		DELETE FROM board_comment
		WHERE bc_no=#{bc_no}
	</delete>
	<update id="commentDepthDecrement" parameterType="int">
		UPDATE board_comment SET
		depth = depth-1
		WHERE bc_no=#{bc_no}
	</update>
</mapper>
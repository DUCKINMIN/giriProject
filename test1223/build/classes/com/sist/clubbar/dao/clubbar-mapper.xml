<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sist.clubbar.dao.clubbar-mapper">
	<sql id="where_cb_no">
		WHERE cb_no=#{cb_no}
	</sql>
	<!-- cb조회수 올리기 -->
	<update id="clubbarHitIncrement" parameterType="int">
		UPDATE clubBar SET cb_hit = cb_hit+1, cb_weekHit = cb_weekHit+1
		<include refid="where_cb_no"/>
	</update>
	<!-- cb정보 가져오기 -->
	<select id="clubbarDetail" resultType="ClubBarVO" parameterType="int">
		SELECT cb_no, cb_name, cb_tel, a_addr1, a_addr2, cb_open, cb_content, cb_hit, cb_weekHit, cb_img_cnt
		FROM clubBar 
		<include refid="where_cb_no"/>
	</select>
	
	<!-- cb별점, 찜수 구하기 -->
	<select id="clubbarJjimRating" resultType="java.util.Map" parameterType="int">
		SELECT j.jjim, cbc.rating, cbc.cnt
		FROM (SELECT COUNT(*) as jjim
		FROM cart <include refid="where_cb_no"/>) j, (SELECT NVL(ROUND(AVG(cbc_rating),1),0) as rating, COUNT(*) as cnt
		FROM clubBar_comment <include refid="where_cb_no"/> AND cbc_root=0) cbc
	</select>
	
	<!-- 주변모텔 가져오기 -->
	<select id="motelData" resultType="MotelVO" parameterType="int">
		SELECT m.mt_no , m.mt_name, m.mt_tel, m.a_addr1, m.a_addr2, m.mt_url
		FROM motel m, clubBar c
		WHERE m.a_addr1 = c.a_addr1 AND c.cb_no = #{cb_no} AND rownum <![CDATA[<]]> 3
	</select>
	
	<!-- 댓글 가져오기 -->
	<select id="cbCommentList" resultType="ClubBarCommentVO" parameterType="java.util.Map">
		SELECT cbc_no, cbc_content, TO_CHAR(cbc_regdate,'YYYY-MM-DD HH24:MI') as dbday, cbc_rating, m_nick, m_email, cbc_group_tab, cbc_group_id, m_profile, num
		FROM (SELECT cbc_no, cbc_content, cbc_regdate, cbc_rating, m_nick, cbc_group_tab, cbc_group_id, m_email, m_profile, rownum as num
		FROM (SELECT cbc.cbc_no, cbc.cbc_content, cbc.cbc_regdate, cbc.cbc_rating, m.m_nick, cbc.cbc_group_tab, cbc.cbc_group_id, m.m_profile, m.m_email
		FROM clubbar_comment cbc, member m WHERE cb_no=#{cb_no} AND cbc.m_email=m.m_email AND cbc_root=0 ORDER BY cbc_group_id DESC, cbc_group_step ASC))
		WHERE num BETWEEN #{start} AND #{end} 
 	</select>
	
	<!-- 댓글 등록하기 -->
	<insert id="cbCommentInsert" parameterType="ClubBarCommentVO">
		<selectKey keyProperty="cbc_no" resultType="int" order="BEFORE">
			SELECT NVL(MAX(cbc_no)+1, 1) as cbc_no FROM clubbar_comment
		</selectKey>
		INSERT INTO clubBar_comment(cbc_no, m_email, cbc_regdate, cbc_content, cb_no, cbc_rating, cbc_group_id) 
		VALUES(#{cbc_no}, #{m_email}, 
		SYSDATE, #{cbc_content}, #{cb_no}, #{cbc_rating}, 
		(SELECT NVL(MAX(cbc_group_id)+1, 1) FROM clubbar_comment))
	</insert>
	
	<!-- 댓글 수정 -->
	<update id="cbCommentUpdate" parameterType="ClubBarCommentVO">
		UPDATE clubbar_comment SET
		cbc_content = #{cbc_content}, cbc_rating = #{cbc_rating}
		WHERE cbc_no = #{cbc_no}
	</update>
	
	<!-- 대댓글 수정 -->
	<update id="cbcReplyUpdate" parameterType="ClubBarCommentVO">
		UPDATE clubbar_comment SET
		cbc_content = #{cbc_content}
		WHERE cbc_no = #{cbc_no}
	</update>
	
	<!-- 대댓글 추가 -->
	<select id="cbcGetParentInfo" resultType="ClubBarCommentVO" parameterType="int">
		SELECT cbc_group_id, cbc_group_step, cbc_group_tab FROM clubbar_comment
		WHERE cbc_no = #{cbc_no}
	</select>
	<update id="cbcStepIncrement" parameterType="ClubBarCommentVO">
		UPDATE clubbar_comment SET
		cbc_group_step = cbc_group_step+1
		WHERE cbc_group_id = #{cbc_group_id} AND cbc_group_step > #{cbc_group_step}
	</update>
	<insert id="cbcReplyInsert" parameterType="ClubBarCommentVO">
		<selectKey keyProperty="cbc_no" resultType="int" order="BEFORE">
			SELECT NVL(MAX(cbc_no)+1, 1) as cbc_no FROM clubbar_comment
		</selectKey>
		INSERT INTO clubbar_comment VALUES(#{cbc_no}, #{m_email}, SYSDATE, #{cbc_content},
		#{cb_no}, #{cbc_rating}, #{cbc_group_id}, #{cbc_group_step},
		#{cbc_group_tab}, #{cbc_root}, 0)
	</insert>
	<update id="cbcDepthIncrement" parameterType="int">
		UPDATE clubbar_comment SET
		depth=depth+1
		WHERE cbc_no = #{cbc_no}
	</update>
	<!-- 대댓글 목록출력 -->
	<select id="cbcReplyList" resultType="ClubBarCommentVO" parameterType="java.util.Map">
		SELECT cbc_no, cbc_content, TO_CHAR(cbc_regdate,'YYYY-MM-DD HH24:MI') as dbday, cbc_rating, m_nick, cbc_group_tab, cbc_root, m_email, m_profile, cbc_group_id, num
		FROM (SELECT cbc_no, cbc_content, cbc_regdate, cbc_rating, m_nick, cbc_group_tab, cbc_root, m_email, cbc_group_id, m_profile, rownum as num
		FROM (SELECT cbc.cbc_no, cbc.cbc_content, cbc.cbc_regdate, cbc.cbc_rating, m.m_nick, cbc.cbc_group_tab, cbc.cbc_root, cbc.cbc_group_id, m.m_profile, m.m_email
		FROM clubbar_comment cbc, member m WHERE cb_no=#{cb_no} AND cbc.m_email=m.m_email AND cbc_root NOT IN (0) ORDER BY cbc_group_id DESC, cbc_no ASC))
		
 	</select>
 	
 	<!-- 댓글 삭제 -->
 	<select id="cbcDeleteData" parameterType="int" resultType="ClubBarCommentVO">
 		SELECT depth, cbc_root FROM clubbar_comment WHERE cbc_no = #{cbc_no}
 	</select>
 	<update id="cbcContentUpdate" parameterType="int">
 		UPDATE clubbar_comment SET
 		cbc_content = '삭제된 댓글입니다.' WHERE cbc_no = #{cbc_no}
 	</update>
 	<delete id="cbcDelete" parameterType="int">
 		DELETE FROM clubbar_comment WHERE cbc_no = #{cbc_no}
 	</delete>
 	<update id="cbcDepthDecrement" parameterType="int">
 		UPDATE clubbar_comment SET
 		depth = depth-1
 		WHERE cbc_no = #{cbc_no}
 	</update>
 	
 	<!-- 찜 저장 -->
 	<select id="cartCount" resultType="int" parameterType="CartVO">
 		SELECT COUNT(*) FROM cart 
 		WHERE m_email=#{m_email} AND cb_no = #{cb_no}
 	</select>
 	<insert id="cartInsert" parameterType="CartVO">
 		INSERT INTO cart 
 		VALUES(#{m_email}, #{cb_no})
 	</insert>
 	<!-- 찜 취소 -->
 	<delete id="cartDelete" parameterType="CartVO">
 		DELETE FROM cart WHERE m_email=#{m_email} AND cb_no=#{cb_no}
 	</delete>
 	
 	<!-- totalpage -->
 	<select id="getTotalPage" resultType="int" parameterType="int">
 		SELECT CEIL(COUNT(*)/10) FROM clubbar_comment WHERE cb_no = #{cb_no} AND cbc_root = 0
 	</select>
 	
 	<!-- 창석 -->
<!--  	SELECT cb.cb_no, cb.cb_name, cb.cb_content, cb.cb_hit, rtable.rating, jtable.jjim
FROM clubBar cb
LEFT OUTER JOIN
     (SELECT cb.cb_no, ROUND(AVG(cbc.cbc_rating),1) AS rating
      FROM clubBar cb, clubBar_comment cbc
      WHERE cbc.cb_no = cb.cb_no
      AND cbc.cbc_root = 0
      GROUP BY cb.cb_no) rtable
ON cb.cb_no = rtable.cb_no
LEFT OUTER JOIN
     (SELECT cb.cb_no, COUNT(ct.cb_no) AS jjim
      FROM clubBar cb, cart ct
      WHERE cb.cb_no = ct.cb_no
      GROUP BY cb.cb_no) jtable
ON cb.cb_no = jtable.cb_no
ORDER BY rating DESC; -->
		<select id="hot3Search" resultType="ClubBarVO" parameterType="java.util.Map">
				SELECT cb.cb_no, cb.cb_name, cb.cb_content, cb.cb_hit, rtable.rating, jtable.jjim
				FROM clubBar cb
				LEFT OUTER JOIN
     				(SELECT cb.cb_no, ROUND(AVG(cbc.cbc_rating),1) AS rating
      				 FROM clubBar cb, clubBar_comment cbc
      				 WHERE cbc.cb_no = cb.cb_no
      				 AND cbc.cbc_root = 0
      				 GROUP BY cb.cb_no) rtable
				ON cb.cb_no = rtable.cb_no
				LEFT OUTER JOIN
     				(SELECT cb.cb_no, COUNT(ct.cb_no) AS jjim
     				 FROM clubBar cb, cart ct
     				 WHERE cb.cb_no = ct.cb_no
     				 GROUP BY cb.cb_no) jtable
				ON cb.cb_no = jtable.cb_no
	  			  <where>
					<if test='cb_name != ""'>
						AND cb.cb_name LIKE '%' || #{cb_name} || '%'
					</if>
					<if test='a_addr1 != ""'>
						AND REGEXP_LIKE(cb.a_addr1, #{a_addr1})
					</if>
					<if test='cb_grade != ""'>
						AND cb.cb_grade IN (${cb_grade})
					</if>
  			  	 </where>
	  			 <choose>
				 	<when test='order == "rating"'>
						ORDER BY rating
					</when>
					<when test='order == "jjim"'>
						ORDER BY jjim
					</when>
					<otherwise>
						ORDER BY cb_hit
					</otherwise>
	  			 </choose>
	  			  DESC, cb_name ASC
	</select>
	
		<insert id="addrInsert" parameterType="ClubBarVO"> 
	INSERT INTO address
	VALUES (#{a_addr1},#{a_addr2}) 
	</insert>

	<insert id="hot3cbInsert" parameterType="ClubBarVO"> 
	INSERT INTO clubBar(cb_no,cb_name,m_email,cb_crn,cb_tel,a_addr1,a_addr2,cb_content,cb_open,cb_grade,cb_img_cnt)
	VALUES(#{cb_no},#{cb_name},#{m_email},#{cb_crn},#{cb_tel},#{a_addr1},#{a_addr2},#{cb_content},#{cb_open},#{cb_grade},#{cb_img_cnt})
	</insert>

	<select id="cbNoMax" resultType="int"> 
	SELECT MAX(cb_no) FROM clubBar
	</select>

	<select id="getCbImgCnt" resultType="int"> 
	SELECT cb_img_cnt FROM
	clubBar WHERE cb_no = #{cb_no} 
	</select>

	<delete id="hot3cbDelete" parameterType="int"> 
	DELETE FROM clubBar WHERE
	cb_no = #{cb_no} 
	</delete>

	<!-- <select id="getUpdateCol" parameterType="int" resultType="ClubBarVO">
		SELECT cb_name, cb_tel, a_addr1, a_addr2, cb_content, cb_open, NVL(cb_img_cnt,0)
		FROM clubBar
		WHERE cb_no = #{cb_no} 
	</select> -->

	<select id="getMyCb" parameterType="java.lang.String" resultType="ClubBarVO">
		SELECT cb_no, cb_name, cb_tel, a_addr1, a_addr2, cb_content, cb_open, NVL(cb_img_cnt,0) AS cb_img_cnt
		FROM clubBar
		WHERE m_email = #{m_email}
	</select>

	<update id="hot3cbUpdate" parameterType="ClubBarVO"> 
	UPDATE clubBar 
	SET cb_name = #{cb_name}, cb_tel = #{cb_tel}, a_addr1 = #{a_addr1}, 
	a_addr2 = #{a_addr2}, cb_content = #{cb_content}, cb_open = #{cb_open},
	cb_img_cnt = #{cb_img_cnt} WHERE cb_no = #{cb_no} 
	</update>
	
		<!-- count (다솜) -->
	<select id="cbrTimeCount" parameterType="ClubBarRankVO" resultType="int">
		SELECT COUNT(*) FROM clubbar_rank
		WHERE cb_no=#{cb_no} AND cbr_time=#{cbr_time}
	</select>
	<!-- 시간별 row 추가 -->
	<insert id="cbrTimeInsert" parameterType="ClubBarRankVO">
		INSERT INTO clubbar_rank VALUES(
			#{cb_no}, #{cbr_time}, 0
		)
	</insert>
	<!-- 시간별 조회수 업데이트 -->
	<update id="cbrHitUpdate" parameterType="ClubBarRankVO">
		UPDATE clubbar_rank SET
		cbr_hit = cbr_hit + 1
		WHERE cb_no=#{cb_no} AND cbr_time=#{cbr_time}
	</update>
	<!-- 시간별 조회수 리스트 -->
	<resultMap type="ClubBarRankVO" id="cbrVO">
		<result property="cb_no" column="cb_no"/>
		<result property="cbr_time" column="cbr_time"/>
		<result property="cbr_hit" column="cbr_hit"/>
		<association property="cvo" javaType="com.sist.clubbar.dao.ClubBarVO">
			<result property="cb_name" column="cb_name"/>
			<result property="a_addr1" column="a_addr1"/>
		</association>
	</resultMap>
	<select id="cbrList" parameterType="String" resultMap="cbrVO">
		SELECT cb_name, a_addr1, cb_no, cbr_time, cbr_hit, num
		FROM (SELECT cb_name, a_addr1, cb_no, cbr_time, cbr_hit, rownum as num
		FROM (SELECT cb.cb_name, cb.a_addr1, cbr.cb_no, cbr.cbr_time, cbr.cbr_hit
		FROM clubbar cb, clubbar_rank cbr	
		WHERE cb.cb_no=cbr.cb_no AND cbr_time=#{cbr_time}	
		ORDER BY cbr_hit DESC))
		where num BETWEEN 1 AND 10
	</select>
</mapper>